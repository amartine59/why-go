# Why Go?
Pros, Cons & a few case studies
29 Jun 2023
Tags: choosing-go, go-pros, go-cons, wawandco
Summary: This presentation contains information about go's pros and cons along with some case studies.


https://go.dev/solutions/case-studies
https://wawand.co/case-studies/
https://symbolsecurity.com/
https://www.motus.com/solutions/living-costs/
https://www.motus.com/solutions/bring-your-own/
https://eventpipe.com/

: Today we're going to be looking at the Go programming language
: its features
: some pros and cons
: and case studies that involve its usage.

## About Go

.image images/go-portrait.gif
: - Go is an open-source programming language that is statically typed.
: - has a garbage collector.
: - and built-in concurrency(supported by Google).

## Pros: Simple

: Go is a Swiss Army knife, but one that has stripped off all of the overhead and extra junk that has accreted onto programming platforms over the past few decades
: Its standard library doesn't aim to solve every problem out there but it enabled new tools to appear and they're good for the purpose they serve 
: Show code for Multi-Insert - Contacts model

## Pros: Easy to Learn

: Go's lean syntax is easy to get used to. Plus, they have a few training materials
: My personal favorite is the Tour of Go which is an interactive site that walks you through Go's main features.

## Pros: Large Ecosystem of partners, communities & tools

: Go has a large ecosystem of partners, communities, and tools which are growing overtime and additionally
: Over the year, they conduct surveys for Go developers which allows them to gather feedback and improve based on it.


## Cons: Hard to master

: According to a Go survey from 2020 over 70% of go devs
: feel productive within the first year, but
: learning how to write idiomatic Go is challenging
: especially, for those coming from a different programming paradigm

## Cons: Verbose Error Handling

: Some people complain that error handling leads to writing boilerplate.
: If it's not done correctly it can easily create clutter & mask problems.


## Cons: Not exactly object-oriented

: Go has types and methods but it doesn't have type hierarchy.
: Interfaces are a different concept, one that's easy to use and more general
: Embedded Types (Similar but not identical to - subclassing) 

## Case Studies: Living Costs

.image images/motus-logo-gray-blue.svg 400 400

: Living Costs(Relocation) -  Was a Motus feature designed to streamline and automate the cost calculation process for companies relocating their employees to cities around the world
: > They required a cloud-native solution to modernize the way they were calculating the relocation cost, one that'd ensure accurate and efficient results.

## Case Studies: Symbol Security

.image images/symbol-logo.svg 400 400

: Symbol - Symbol Security is a phishing simulation and training platform designed to help companies raise cyber-awareness and reduce risks within their teams



